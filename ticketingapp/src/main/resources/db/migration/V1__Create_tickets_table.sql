CREATE SCHEMA IF NOT EXISTS tickets;

CREATE TABLE IF NOT EXISTS tickets.tickets (
                                               id           INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                               title        TEXT        NOT NULL,
                                               description  TEXT        NOT NULL,
                                               status       TEXT        NOT NULL DEFAULT 'OPEN',
                                               owner_id     INTEGER     NOT NULL,
                                               assignee_id  INTEGER,
                                               created_at   TIMESTAMPTZ NOT NULL DEFAULT now(),
                                               updated_at   TIMESTAMPTZ NOT NULL DEFAULT now()
);


CREATE TABLE IF NOT EXISTS tickets.attachments_meta (
                                                        id            INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                                        ticket_id     INTEGER     NOT NULL REFERENCES tickets.tickets(id) ON DELETE CASCADE,
                                                        blob_path     VARCHAR(512) NOT NULL,
                                                        original_name VARCHAR(255) NOT NULL,
                                                        content_type  VARCHAR(100) NOT NULL,
                                                        size_bytes    BIGINT       NOT NULL CHECK (size_bytes >= 0),
                                                        scan_status   VARCHAR(16)  NOT NULL CHECK (scan_status IN ('PENDING','CLEAN','QUARANTINED')),
                                                        created_at    TIMESTAMPTZ  NOT NULL DEFAULT now()
);


CREATE INDEX IF NOT EXISTS idx_tickets_owner    ON tickets.tickets(owner_id);
CREATE INDEX IF NOT EXISTS idx_tickets_assignee ON tickets.tickets(assignee_id);
CREATE INDEX IF NOT EXISTS idx_tickets_status   ON tickets.tickets(status);
CREATE INDEX IF NOT EXISTS idx_attach_ticket    ON tickets.attachments_meta(ticket_id);